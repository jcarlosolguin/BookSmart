'use strict';

const Promise = require('bluebird'); // eslint-disable-line no-shadow
const _ = require('lodash');
const request = Promise.promisifyAll(require('request'));

module.exports = class WebClient {
    static _trimPath (path) {
        if (!path) return '';

        return `/${_.trimStart(path, '/')}`;
    }

    constructor (baseUrl) {
        if (_.isNil(baseUrl)) throw new Error('Invalid argument: "baseUrl"');

        this._baseUrl = _.trimEnd(baseUrl, '/');
        this._request = request;
    }

    request (path = '', options = {}) {
        const trimmedPath = WebClient._trimPath(path);

        return this._request.getAsync(this._baseUrl + trimmedPath, options);
    }

    requestAsJson (path, options) {
        return this.request(path, options)
            .then(response => _.assign(response, { body: JSON.parse(response.body) }));
    }

    requestBody (path, options) {
        return this.request(path, options)
            .then(_.property('body'));
    }

    requestBodyAsJson (path, options) {
        return this.requestBody(path, options)
            .then(something => JSON.parse(something));
    }
};
